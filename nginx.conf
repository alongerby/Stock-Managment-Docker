events {
    worker_connections 1024;  # Maximum concurrent connections per worker
}

http {
    upstream stocks1_backend {
        server stocks1:8000;  # Match the container's exposed port
    }

    upstream stocks2_backend {
        server stocks2:8000;  # Match the container's exposed port
    }

    upstream capital_gains_backend {
        server capital-gains:8080;  # Match the container's exposed port
    }

    server {
        listen 80;
        server_name localhost;

        # Route requests for stocks1
        location /stocks1/ {
            proxy_pass http://stocks1_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route requests for stocks2
        location /stocks2/ {
            proxy_pass http://stocks2_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route requests for capital-gains
        location /capital-gains/ {
            proxy_pass http://capital_gains_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}